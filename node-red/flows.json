[{"id":"55e3c78a.a11168","type":"tab","label":"main","disabled":false,"info":"# Intialization and entry point\nThe main functions of the flow are:\n * initialize the equipment\n * create a web socket for the incoming commands and responses\n * check and direct messages to the crystallizer flow\n * check and direct messages to the simulation flow\n * check and direct messages to the equipment flows\n * format the equipment responses\n     * store in database\n     * send to websocket\n\n# Modifications\nTo add new equipment, the following must be done:\n * Create a flow to handle messages with the new equipment tag.\n    * handle all commands for the equipment\n    * return a mesage with payload responding to the command.\n * Link the new flow using the equipment switch\n * Create a set of commands to poll the equipment for PVs (initialize node)\n * Modify the simulation node as desired\n\n## Initialize the equipment\nInitialization is performed by the `initialize` nodes.\n - Sets the equipment string parameters, such as USER, STATUS, ...etc\n - Creates a `setInterval` to request present values (PVs).\n\n## Create a web socket to listen for commands and send commands.\nThe commands are of format:\nmsg.payload (JSON): {\n                        \"equipment\": \"equipment_tag\",\n                        \"command\": \"command_tag\",\n                        \"value\": value of equipment.command tag (optional)\n                    }\nExample:\n`msg.payload =   {\n                    \"equipment\": \"PUMP:1\",\n                    \"command\": \"RATE:SP\",\n                    \"value\": 3.0\n                }`\n\n## Direct incoming messages for the CRYSTALLIZER to the crystallizer flow for handling.\nThese messages are redirected, as they are not for any sub piece of equipment. Example\nmessages would be to set the USER, STATUS, ...etc. Also, the messages may pertain\nto equipment macros, such as initializing all the equipment. Thus, it is necessary\nto direct the messages prior to any other handling.\n\n## Simulation check\nThis `simulation check` node checks to see if the module is set to simulate.\nIf the module is in simulation mode, the messages are redirected to the simulation\nmode, else they are sent to the equipment switch, which directs the messages\nto flows that handle each piece of equipment in the module.\n\n## Assimilation of responses\nThe responses from each piece of equipment (other flows) are formatted and sent\nto a database and also sent back to the websocket for client consumption."},{"id":"e0b529b0.845718","type":"tab","label":"crystallizer","disabled":false,"info":"Flow to direct requests to crystallizer module sub-equipment. The equipment/tag\npermissible are:\n\n\"metaData:EXPERIMENT:PV:\": \"IRAK4\",\n\"metaData:USER:PV\": \"Brent Maranzano\",\n\"metaData:STATUS:PV\": \"Running\",\n\"metaData:MODE:PV\": \"Running\",\n\"TCU:1:BATH:TEMP:PV\": \"60\",\n\"TCU:1:SENSOR:TEMP:PV\": \"58\",\n\"TCU:2:BATH:TEMP:PV\": \"30\",\n\"TCU:2:SENSOR:TEMP:PV\": \"26\",\n\"TCU:3:BATH:TEMP:PV\": \"5\",\n\"TCU:3:SENSOR:TEMP:PV\": \"4\",\n\"STIR:1:SPEED:PV\": \"190\",\n\"STIR:2:SPEED:PV\": \"200\",\n\"STIR:3:SPEED:PV\": \"250\",\n\"PUMP:2:RATE:PV\": \"4.2\",\n\"PUMP:1:RATE:PV\": \"2.3\",\n\"PUMP:3:RATE:PV\": \"1.8\",\n\"PUMP:FEED:RATE:PV\": \"2.1\",\n\"BALANCE:PRODUCT:MASS:PV\": \"0\",\n\"BALANCE:FEED:MASS:PV\": \"1200\",\n\"BALANCE:ANTISOLVENT:MASS:PV\": \"800\",\n\"IR:1:CONCENTRATION:PV\": \"12.3\",\n\"IR:2:CONCENTRATION:PV\": \"6.2\",\n\"IR:3:CONCENTRATION:PV\": \"1.3\",\n\"FBRM:1:D50:PV\": \"1.31\",\n\"FBRM:2:D50:PV\": \"1.89\",\n\"FBRM:3:D50:PV\": \"2.06\",\n\"FBRM:1:D90:PV\": \"2.97\",\n\"FBRM:2:D90:PV\": \"4.31\",\n\"FBRM:3:D90:PV\": \"5.65\",\n\"THERMOCOUPLE:FEED:TEMP:PV\": \"60.2\",\n\"PT:SEPARATOR:PRESSURE:PV\": \"0.8\",\n\"VALVES:STATE:PV\": {\"A\": \"CLOSED\", \"B\": \"CLOSED\", \"C\": \"CLOSED\", \"D\": \"CLOSED\", \"E\": \"CLOSED\"}\n"},{"id":"46d2018c.b98e9","type":"tab","label":"simulate","disabled":false,"info":""},{"id":"8e62d41a.e07718","type":"tab","label":"TCU:1","disabled":true,"info":""},{"id":"11cf824.6b7457e","type":"tab","label":"TCU:2","disabled":true,"info":""},{"id":"ea68757c.e04a88","type":"tab","label":"TCU:3","disabled":true,"info":""},{"id":"7a4bbbcd.f3de04","type":"tab","label":"STIR:1","disabled":true,"info":""},{"id":"7b3ed3e0.a30c8c","type":"tab","label":"STIR:2","disabled":true,"info":""},{"id":"911ec690.702d28","type":"tab","label":"STIR:3","disabled":true,"info":""},{"id":"7589d737.394208","type":"tab","label":"PLC","disabled":true,"info":""},{"id":"2410a9c4.77f756","type":"tab","label":"PLC old","disabled":true,"info":""},{"id":"4910e0b9.0094a","type":"tab","label":"IR","disabled":true,"info":""},{"id":"b3251f26.92e43","type":"tab","label":"FBRM","disabled":true,"info":""},{"id":"a5c752b4.9a948","type":"subflow","name":"MQTT equipment","info":"","category":"FAST Equipment","in":[{"x":320,"y":140,"wires":[{"id":"e04368df.4aa588"}]}],"out":[{"x":1280,"y":140,"wires":[{"id":"b31c5dfd.836b8","port":0}]}],"env":[]},{"id":"22d174df.74346c","type":"subflow","name":"balance","info":"","category":"lab equipment","in":[{"x":50,"y":30,"wires":[]}],"out":[{"x":160,"y":30,"wires":[]}],"env":[]},{"id":"d221c175.b6feb","type":"subflow","name":"pump","info":"","category":"FAST Equipment","in":[{"x":50,"y":30,"wires":[]}],"out":[{"x":160,"y":30,"wires":[]}],"env":[]},{"id":"61547feb.61fe8","type":"subflow","name":"stir","info":"","category":"FAST Equipment","in":[{"x":50,"y":30,"wires":[]}],"out":[{"x":160,"y":30,"wires":[]}],"env":[]},{"id":"9b099651.5e2a48","type":"subflow","name":"FAST input","info":"","category":"FAST Equipment","in":[],"out":[],"env":[]},{"id":"11b9850d.964dfb","type":"postgresdb","z":"","hostname":"postgres","port":"5432","db":"crystallization","ssl":false},{"id":"2e033692.9a2b6a","type":"influxdb","z":"","hostname":"crystallization_influx_database","port":"8086","protocol":"http","database":"crystallization","name":"","usetls":false,"tls":""},{"id":"f81996f0.99aee8","type":"ui_group","z":"","name":"MT Balance","tab":"","disp":true,"width":"6","collapse":false},{"id":"e226105f.02144","type":"mqtt-broker","z":"","name":"xeon","broker":"10.131.72.83","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b3acf60b.ca0db8","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#000000","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Crystallization","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"ba6631.51bd49d","type":"OpcUa-Endpoint","z":"","endpoint":"http://192.168.1.130:62551/iCOpcUaServer","secpol":"None","secmode":"NONE","login":false},{"id":"fca89040.aa06c","type":"ui_group","z":"","name":"TCU 1","tab":"ee9aeec7.d445f","order":1,"disp":true,"width":"6","collapse":false},{"id":"71d34856.677478","type":"OpcUa-Endpoint","z":"","endpoint":"opc.tcp://10.131.0.233:62552/iCOpcUaServer","secpol":"None","secmode":"NONE","login":false},{"id":"ee9aeec7.d445f","type":"ui_tab","z":"","name":"Temperature","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"ff3c3264.008f","type":"mqtt-broker","z":"","name":"crystallizer","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"6ecea805.65f538","type":"modbus-client","z":"","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"192.168.1.150","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"e6b9b970.bf64e8","type":"ui_group","z":"","name":"Pump 1","tab":"d7d1e33d.a226d","order":1,"disp":true,"width":"6","collapse":false},{"id":"817d1e71.1ae61","type":"ui_tab","z":"","name":"IR","icon":"dashboard","order":3,"disabled":false,"hidden":false},{"id":"3aae0048.64e39","type":"ui_group","z":"","name":"Raw Spectra","tab":"817d1e71.1ae61","order":1,"disp":true,"width":"12","collapse":false},{"id":"9e5441cb.7c9eb","type":"ui_group","z":"","name":"TCU 2","tab":"ee9aeec7.d445f","order":2,"disp":true,"width":"6","collapse":false},{"id":"9d5c6cc6.dbe65","type":"ui_group","z":"","name":"TCU 3","tab":"ee9aeec7.d445f","order":3,"disp":true,"width":"6","collapse":false},{"id":"d9f8e345.a364b","type":"ui_spacer","name":"spacer","group":"fca89040.aa06c","order":5,"width":"3","height":1},{"id":"caa18344.12746","type":"ui_spacer","name":"spacer","group":"9e5441cb.7c9eb","order":5,"width":"3","height":1},{"id":"47964a68.842964","type":"ui_spacer","name":"spacer","group":"9d5c6cc6.dbe65","order":5,"width":"3","height":1},{"id":"d7d1e33d.a226d","type":"ui_tab","z":"","name":"Pumps","icon":"dashboard","order":4,"disabled":false,"hidden":false},{"id":"76886a3f.2ae464","type":"ui_group","z":"","name":"Pump 2","tab":"d7d1e33d.a226d","order":2,"disp":true,"width":"6","collapse":false},{"id":"4f9772ac.8321ac","type":"ui_group","z":"","name":"Pump 3","tab":"d7d1e33d.a226d","order":3,"disp":true,"width":"6","collapse":false},{"id":"cccc2dfd.772e4","type":"ui_group","z":"","name":"Pump 4","tab":"d7d1e33d.a226d","order":4,"disp":true,"width":"6","collapse":false},{"id":"8b52e981.03d1b8","type":"ui_spacer","name":"spacer","group":"e6b9b970.bf64e8","order":2,"width":"3","height":1},{"id":"c48e8d8f.31515","type":"ui_spacer","name":"spacer","group":"e6b9b970.bf64e8","order":4,"width":"1","height":1},{"id":"6f78ccb3.6357e4","type":"ui_spacer","name":"spacer","group":"76886a3f.2ae464","order":4,"width":1,"height":1},{"id":"896fc5d9.eef348","type":"ui_spacer","name":"spacer","group":"4f9772ac.8321ac","order":4,"width":1,"height":1},{"id":"44c5af8e.bd7d8","type":"ui_spacer","name":"spacer","group":"cccc2dfd.772e4","order":4,"width":1,"height":1},{"id":"1e828da7.327fd2","type":"ui_spacer","name":"spacer","group":"76886a3f.2ae464","order":2,"width":"3","height":1},{"id":"944e7cab.f81d","type":"ui_spacer","name":"spacer","group":"4f9772ac.8321ac","order":2,"width":"3","height":1},{"id":"fc336798.6067d8","type":"ui_spacer","name":"spacer","group":"cccc2dfd.772e4","order":2,"width":"3","height":1},{"id":"1dcdcf5f.68bee1","type":"ui_group","z":"","name":"Chart","tab":"","disp":true,"width":"12","collapse":false},{"id":"bc02433b.20f67","type":"ui_group","z":"","name":"demo 3","tab":"","order":1,"disp":false,"width":"12","collapse":false},{"id":"637699fd.22f2c8","type":"ui_group","z":"","name":"demo 2","tab":"","order":1,"disp":false,"width":"12","collapse":false},{"id":"fd9a0e2d.60c44","type":"ui_group","z":"4910e0b9.0094a","name":"Default","tab":"","disp":true,"width":"6"},{"id":"85158aab.eff3d8","type":"ui_group","z":"","name":"demo 1","tab":"","order":1,"disp":false,"width":"12","collapse":false},{"id":"2c56939f.803cac","type":"ui_group","z":"","name":"demo 3","tab":"","order":1,"disp":false,"width":"12","collapse":false},{"id":"5e2e6542.d6828c","type":"ui_group","z":"","name":"demo 2","tab":"","order":1,"disp":false,"width":"12","collapse":false},{"id":"13b851bd.01757e","type":"ui_group","z":"","name":"selected peaks","tab":"817d1e71.1ae61","order":2,"disp":true,"width":"12","collapse":false},{"id":"a430d7bc.1ccd18","type":"ui_group","name":"Group 2","tab":"","order":2,"disp":true,"width":6},{"id":"7ede6356.a220cc","type":"ui_tab","z":"","name":"FBRM","icon":"dashboard","order":5,"disabled":false,"hidden":false},{"id":"c5e7efdc.fdd55","type":"ui_group","z":"","name":"Distributions","tab":"7ede6356.a220cc","order":1,"disp":true,"width":"12","collapse":false},{"id":"6dc49091.42e9d","type":"ui_group","z":"","name":"peak selection","tab":"7ede6356.a220cc","order":2,"disp":true,"width":"6","collapse":false},{"id":"992e990a.5d1558","type":"OpcUa-Endpoint","z":"","endpoint":"opc.tcp://10.131.1.35:62552/icOpcUaServer","secpol":"None","secmode":"NONE","login":false},{"id":"1ee49e44.34aaa2","type":"ui_spacer","name":"spacer","group":"9d5c6cc6.dbe65","order":2,"width":"6","height":1},{"id":"8177f99.0378608","type":"ui_spacer","name":"spacer","group":"fca89040.aa06c","order":2,"width":"6","height":1},{"id":"9f2adba9.50ff98","type":"ui_spacer","name":"spacer","group":"9e5441cb.7c9eb","order":2,"width":"6","height":1},{"id":"e4b1cb30.fae218","type":"ui_tab","z":"","name":"Stir","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"a3b3653e.498ac8","type":"ui_group","z":"","name":"Stir 3","tab":"e4b1cb30.fae218","order":3,"disp":true,"width":"6","collapse":false},{"id":"8db4efb1.c26bb","type":"ui_group","z":"","name":"Stir 2","tab":"e4b1cb30.fae218","order":2,"disp":true,"width":"6","collapse":false},{"id":"c12c7062.05da1","type":"ui_group","z":"","name":"Stir 1","tab":"e4b1cb30.fae218","order":1,"disp":true,"width":"6","collapse":false},{"id":"6ac39716.07f6b8","type":"ui_tab","z":"","name":"Process equipment","icon":"dashboard","order":6,"disabled":false,"hidden":false},{"id":"61ae3ed8.854c","type":"ui_group","z":"","name":"TCU","tab":"6ac39716.07f6b8","order":1,"disp":true,"width":"6","collapse":false},{"id":"81401fd3.c5d93","type":"websocket-listener","z":"","path":"/ws/crystallizer","wholemsg":"false"},{"id":"b6929565.a45d18","type":"mqtt out","z":"a5c752b4.9a948","name":"send command","topic":"","qos":"","retain":"","broker":"e226105f.02144","x":700,"y":140,"wires":[]},{"id":"e04368df.4aa588","type":"function","z":"a5c752b4.9a948","name":"format mqtt","func":"flow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":140,"wires":[["b6929565.a45d18"]]},{"id":"acc01807.f2cac8","type":"mqtt in","z":"a5c752b4.9a948","name":"command response","topic":"res/balance/#","qos":"2","datatype":"auto","broker":"e226105f.02144","x":890,"y":140,"wires":[["b31c5dfd.836b8"]]},{"id":"b31c5dfd.836b8","type":"function","z":"a5c752b4.9a948","name":"select topic","func":"var command = flow.get(\"topic\").split(\"/\").slice(1).join(\"/\");\nvar response = msg.topic;\n\nif (response.split(\"/\")[0] === \"res\" &&\n    response.split(\"/\").slice(1).join(\"/\") === command) {\n        msg.payload = msg.payload;\n        return msg;\n}","outputs":1,"noerr":0,"x":1130,"y":140,"wires":[[]]},{"id":"7036ad2.8319054","type":"modbus-flex-write","z":"2410a9c4.77f756","name":"","showStatusActivities":true,"showErrors":true,"server":"6ecea805.65f538","x":890,"y":580,"wires":[[],[]]},{"id":"2f69238e.f368ec","type":"OpcUa-Client","z":"4910e0b9.0094a","endpoint":"992e990a.5d1558","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","name":"IR 1","x":350,"y":140,"wires":[["128afddc.2e0da2"]]},{"id":"853e0d1f.358e4","type":"inject","z":"4910e0b9.0094a","name":"raw spectra","topic":"ns=2;s=Local.iCIR.Probe2.SpectraRaw;datatype=Double","payload":"","payloadType":"str","repeat":"40","crontab":"","once":true,"onceDelay":".2","x":190,"y":100,"wires":[["2f69238e.f368ec"]]},{"id":"650f069b.3421b8","type":"modbus-flex-getter","z":"2410a9c4.77f756","name":"Modbus Flexible Read","showStatusActivities":true,"showErrors":true,"logIOActivities":false,"server":"6ecea805.65f538","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":900,"y":640,"wires":[[],["84d75cf2.bd5bd"]]},{"id":"f5bc0eea.d882c","type":"inject","z":"2410a9c4.77f756","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":960,"wires":[["624303e6.7e44dc"]]},{"id":"624303e6.7e44dc","type":"function","z":"2410a9c4.77f756","name":"read register Pumpout1","func":"msg.payload = { \n    'fc': 3, \n    'unitid': 253, \n    'address': 3800, \n    'quantity': 2 \n}\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":960,"wires":[[]]},{"id":"84d75cf2.bd5bd","type":"function","z":"2410a9c4.77f756","name":"read buffer","func":"let ba = msg.payload[\"buffer\"].toJSON()[\"data\"];\nba = [ba[2], ba[3], ba[0], ba[1]];\nbuf = Buffer.from(ba);\nvalue = buf.readFloatBE(buf);\nmsg.payload = value.toFixed(2);\nreturn msg;","outputs":1,"noerr":0,"x":1110,"y":640,"wires":[["9e79121b.9166e"]]},{"id":"b4afc793.d2b188","type":"ui_gauge","z":"2410a9c4.77f756","name":"PV","group":"e6b9b970.bf64e8","order":3,"width":"5","height":"4","gtype":"gage","title":"PV","label":"ml/min","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1150,"y":820,"wires":[]},{"id":"5c4b0383.0383bc","type":"ui_text_input","z":"2410a9c4.77f756","name":"PUMP:1:RATE:SP","label":"SP","tooltip":"set point for pump 1","group":"e6b9b970.bf64e8","order":5,"width":"2","height":"1","passthru":true,"mode":"number","delay":"0","topic":"PUMP:1:RATE:SP","x":170,"y":60,"wires":[["e0da46df.047848"]]},{"id":"e11fa6ad.c8a398","type":"inject","z":"2410a9c4.77f756","name":"PUMP:1:RATE:PV","topic":"PUMP:1:RATE:PV","payload":"{\"address\": 3600}","payloadType":"json","repeat":"5","crontab":"","once":true,"onceDelay":0.1,"x":140,"y":420,"wires":[["e0da46df.047848"]]},{"id":"f475808e.8e022","type":"inject","z":"2410a9c4.77f756","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":900,"wires":[["db5ffb45.963828"]]},{"id":"db5ffb45.963828","type":"function","z":"2410a9c4.77f756","name":"AO_01_RAW read holding register %AQ1 address 0 - FC3 ","func":"msg.payload = { 'fc': 3, 'unitid': 253, 'address': 0 , 'quantity': 1 }\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":900,"wires":[[]]},{"id":"bf36acc.7dd345","type":"function","z":"2410a9c4.77f756","name":"AI1_Raw Read input register %AI1  FC4 - 0","func":"msg.payload = { 'fc': 4, 'unitid': 253, 'address': 0 , 'quantity': 1 }\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":840,"wires":[[]]},{"id":"b0067c87.d650c","type":"inject","z":"2410a9c4.77f756","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":840,"wires":[["bf36acc.7dd345"]]},{"id":"e9859eaa.d358a","type":"ui_text_input","z":"2410a9c4.77f756","name":"PUMP:2:RATE:SP","label":"SP","tooltip":"set point for pump 2","group":"76886a3f.2ae464","order":5,"width":"2","height":"1","passthru":true,"mode":"number","delay":"0","topic":"PUMP:2:RATE:SP","x":170,"y":100,"wires":[["e0da46df.047848"]]},{"id":"e51c1298.f91a1","type":"ui_text_input","z":"2410a9c4.77f756","name":"PUMP:3:RATE:SP","label":"SP","tooltip":"set point for pump 3","group":"4f9772ac.8321ac","order":5,"width":"2","height":"1","passthru":true,"mode":"number","delay":"0","topic":"PUMP:3:RATE:SP","x":170,"y":140,"wires":[["e0da46df.047848"]]},{"id":"e6e9c865.7cbe18","type":"ui_text_input","z":"2410a9c4.77f756","name":"PUMP:4:RATE:SP","label":"SP","tooltip":"set point for pump 4","group":"cccc2dfd.772e4","order":5,"width":"2","height":"1","passthru":true,"mode":"number","delay":"0","topic":"PUMP:4:RATE:SP","x":170,"y":180,"wires":[["e0da46df.047848"]]},{"id":"eb0bad2d.c3856","type":"inject","z":"2410a9c4.77f756","name":"PUMP:2:RATE:PV","topic":"PUMP:2:RATE:PV","payload":"{\"address\": 3602}","payloadType":"json","repeat":"5","crontab":"","once":true,"onceDelay":"0.5","x":140,"y":460,"wires":[["e0da46df.047848"]]},{"id":"1bd92678.e8beca","type":"inject","z":"2410a9c4.77f756","name":"PUMP:3:RATE:PV","topic":"PUMP:3:RATE:PV","payload":"{\"address\": 3604}","payloadType":"json","repeat":"5","crontab":"","once":true,"onceDelay":"1","x":140,"y":500,"wires":[["e0da46df.047848"]]},{"id":"f6be5a0c.e29408","type":"inject","z":"2410a9c4.77f756","name":"PUMP:4:RATE:PV","topic":"PUMP:4:RATE:PV","payload":"{\"address\": 3606}","payloadType":"json","repeat":"5","crontab":"","once":true,"onceDelay":"1.5","x":140,"y":540,"wires":[["e0da46df.047848"]]},{"id":"9e79121b.9166e","type":"function","z":"2410a9c4.77f756","name":"format response","func":"let request = flow.get(\"request\");\nlet requestComponents = request.split(\":\");\nlet equipment = requestComponents.slice(0,2).join(\":\");\nlet command = requestComponents.slice(2, requestComponents.length).join(\":\");\n\nif (command === \"RATE:PV\") {\n    msg.payload = [\n        {\n            \"rate\": Number(msg.payload.toString(\"utf8\"))\n        },\n        {\n            \"equipment\": equipment\n        }\n    ];\n}\nreturn msg;","outputs":1,"noerr":0,"x":1300,"y":640,"wires":[["ae8176cf.6eb078","fee6c566.d44118"]]},{"id":"75042a4a.598a04","type":"ui_switch","z":"2410a9c4.77f756","name":"PUMP:1:STATE","label":"off/on","tooltip":"Pump 1 switch","group":"e6b9b970.bf64e8","order":1,"width":"2","height":"1","passthru":true,"decouple":"false","topic":"PUMP:1:STATE","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","x":160,"y":234,"wires":[["e0da46df.047848"]]},{"id":"80b31438.f7b948","type":"ui_switch","z":"2410a9c4.77f756","name":"PUMP:2:STATE","label":"off/on","tooltip":"Pump 2 switch","group":"76886a3f.2ae464","order":1,"width":"2","height":"1","passthru":true,"decouple":"false","topic":"PUMP:2:STATE","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","x":160,"y":274,"wires":[["e0da46df.047848"]]},{"id":"813b716a.87ee3","type":"ui_switch","z":"2410a9c4.77f756","name":"PUMP:3:STATE","label":"off/on","tooltip":"Pump 3 switch","group":"4f9772ac.8321ac","order":1,"width":"2","height":"1","passthru":true,"decouple":"false","topic":"PUMP:3:STATE","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","x":160,"y":314,"wires":[["e0da46df.047848"]]},{"id":"2760ebb5.fbe094","type":"ui_switch","z":"2410a9c4.77f756","name":"PUMP:4:STATE","label":"off/on","tooltip":"Pump 4 switch","group":"cccc2dfd.772e4","order":1,"width":"2","height":"1","passthru":true,"decouple":"false","topic":"PUMP:4:STATE","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","x":160,"y":354,"wires":[["e0da46df.047848"]]},{"id":"a12016c2.e83da8","type":"ui_gauge","z":"2410a9c4.77f756","name":"PV","group":"76886a3f.2ae464","order":3,"width":"5","height":"4","gtype":"gage","title":"PV","label":"ml/min","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1150,"y":860,"wires":[]},{"id":"a4e24f35.c8512","type":"ui_gauge","z":"2410a9c4.77f756","name":"PV","group":"4f9772ac.8321ac","order":3,"width":"5","height":"4","gtype":"gage","title":"PV","label":"ml/min","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1150,"y":900,"wires":[]},{"id":"ce291150.b6531","type":"ui_gauge","z":"2410a9c4.77f756","name":"PV","group":"cccc2dfd.772e4","order":3,"width":"5","height":"4","gtype":"gage","title":"PV","label":"ml/min","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1150,"y":940,"wires":[]},{"id":"ae8176cf.6eb078","type":"influxdb out","z":"2410a9c4.77f756","influxdb":"2e033692.9a2b6a","name":"crystallization","measurement":"crystallization","precision":"","retentionPolicy":"","x":960,"y":760,"wires":[]},{"id":"128afddc.2e0da2","type":"function","z":"4910e0b9.0094a","name":"format data","func":"let labels = [];\nif (msg.topic.includes(\"XAxisDefinition\")) {\n    labels = msg.payload.axisSteps.map(function(elem) {\n        return Number(elem.toFixed(0));\n    });\n    flow.set(\"xaxis\", labels);\n}\nelse {\n    let data = [];\n    for (var label in msg.payload) {\n        //labels.push(Number(label));\n        labels = flow.get(\"xaxis\");\n        data.push(msg.payload[label]);\n    }\n    msg.payload = {\n        \"labels\": labels,\n        \"data\": data\n    }\n    msg.topic = \"data\";\n\n    return msg;\n}","outputs":1,"noerr":0,"x":570,"y":140,"wires":[["edc24171.f3276","6bb05384.629fdc","67716ad7.afcce4"]]},{"id":"edc24171.f3276","type":"template","z":"4910e0b9.0094a","name":"","field":"template","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<canvas id=\"line-chart\" width=\"2\" height=\"1\" style=\"border:1px solid #000000;\"></canvas>\n\n<script>\nnew Chart(document.getElementById(\"line-chart\"), {\n  type: 'line',\n  data: {\n    labels: [{{{payload.labels}}}],\n    datasets: [{ \n        data: [{{{payload.data}}}],\n        label: \"crystallizer 1\",\n        borderColor: \"#3e95cd\",\n        fill: false\n      }\n    ]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'IR 1'\n    }\n  }\n});\n\n</script>\n","output":"str","x":820,"y":140,"wires":[["bc90d0d6.a6bb3"]]},{"id":"bc90d0d6.a6bb3","type":"ui_template","z":"4910e0b9.0094a","group":"3aae0048.64e39","name":"raw spectra","order":1,"width":"12","height":"7","format":"ignored","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":1010,"y":140,"wires":[[]]},{"id":"6bb05384.629fdc","type":"function","z":"4910e0b9.0094a","name":"extract point","func":"msg.payload= msg.payload[\"data\"][flow.get(\"peak1\")];\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":260,"wires":[["3dc5dda7.5a22e2","b3232c02.32f07"]]},{"id":"3dc5dda7.5a22e2","type":"ui_chart","z":"4910e0b9.0094a","name":"peak","group":"13b851bd.01757e","order":1,"width":"12","height":"6","label":"peak","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1010,"y":260,"wires":[[]]},{"id":"22e19d0f.68c122","type":"ui_text_input","z":"4910e0b9.0094a","name":"peak selection","label":"selected peak","tooltip":"enter peak position to be tracked","group":"13b851bd.01757e","order":2,"width":0,"height":0,"passthru":true,"mode":"number","delay":"0","topic":"peak1","x":260,"y":360,"wires":[["e0268e44.8e0d9"]]},{"id":"50c4ab69.687734","type":"inject","z":"4910e0b9.0094a","name":"initialize peak1","topic":"peak1","payload":"1000","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":260,"y":320,"wires":[["e0268e44.8e0d9"]]},{"id":"5c50dd81.da1dd4","type":"OpcUa-Client","z":"b3251f26.92e43","endpoint":"71d34856.677478","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","name":"FBRM 1","x":360,"y":160,"wires":[["daa861fa.76256"]]},{"id":"7bd0c944.ca4c18","type":"inject","z":"b3251f26.92e43","name":"node","topic":"ns=2;s=Local.iCFBRM.Experiment.DistributionBinnedDefault","payload":"","payloadType":"str","repeat":"10","crontab":"","once":true,"onceDelay":0.1,"x":150,"y":160,"wires":[["5c50dd81.da1dd4"]]},{"id":"daa861fa.76256","type":"function","z":"b3251f26.92e43","name":"format data","func":"let labels = [];\nlet data = [];\n\nfor (var label in msg.payload) {\n    labels.push(Number(label));\n    data.push(msg.payload[label]);\n}\n\nmsg.payload = {\n    \"labels\": labels,\n    \"data\": data\n    \n}\nmsg.topic = \"data\";\n\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":160,"wires":[["766151ae.bcf1e","f8f26675.304b78"]]},{"id":"766151ae.bcf1e","type":"template","z":"b3251f26.92e43","name":"","field":"template","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<canvas id=\"line-chart\" width=\"3\" height=\"1\" style=\"border:1px solid #000000;\"></canvas>\n\n<script>\nnew Chart(document.getElementById(\"line-chart\"), {\n  type: 'line',\n  data: {\n    labels: [{{{payload.labels}}}],\n    datasets: [{ \n        data: [{{{payload.data}}}],\n        label: \"crystallizer 1\",\n        borderColor: \"#3e95cd\",\n        fill: false\n      }\n    ]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'Raw IR spectra'\n    }\n  }\n});\n\n</script>\n","output":"str","x":800,"y":160,"wires":[["b407c831.e95468"]]},{"id":"b407c831.e95468","type":"ui_template","z":"b3251f26.92e43","group":"c5e7efdc.fdd55","name":"distribution 1","order":1,"width":"12","height":"12","format":"ignored","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":990,"y":160,"wires":[[]]},{"id":"f8f26675.304b78","type":"function","z":"b3251f26.92e43","name":"extract point","func":"if (msg.topic === \"peak1\") {\n    context.set(\"peak1\", msg.payload);\n}\nelse {\n    msg.payload= msg.payload[\"data\"][context.get(\"peak1\")];\n    return msg;\n}\n","outputs":1,"noerr":0,"x":830,"y":280,"wires":[["5609f436.a2ee6c","f7e1343.fc2ebc8"]]},{"id":"5609f436.a2ee6c","type":"ui_chart","z":"b3251f26.92e43","name":"peak","group":"6dc49091.42e9d","order":2,"width":"6","height":"6","label":"peak","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1010,"y":280,"wires":[[]]},{"id":"f7e1343.fc2ebc8","type":"debug","z":"b3251f26.92e43","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1030,"y":360,"wires":[]},{"id":"7c02504b.6f34b","type":"ui_text_input","z":"b3251f26.92e43","name":"peak selection","label":"selected peak","tooltip":"enter peak position to be tracked","group":"6dc49091.42e9d","order":3,"width":0,"height":0,"passthru":true,"mode":"number","delay":"0","topic":"peak1","x":600,"y":280,"wires":[["f8f26675.304b78"]]},{"id":"cfdb5779.7e8048","type":"inject","z":"b3251f26.92e43","name":"initialize peak1","topic":"","payload":"1000","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":380,"y":280,"wires":[["7c02504b.6f34b"]]},{"id":"3110db41.bccb24","type":"inject","z":"4910e0b9.0094a","name":"x-axis","topic":"ns=2;s=Local.iCIR.Probe2.SpectraRaw.XAxisDefinition","payload":"","payloadType":"str","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":170,"y":160,"wires":[["2f69238e.f368ec"]]},{"id":"8707acb.2d79b5","type":"postgres","z":"4910e0b9.0094a","postgresdb":"11b9850d.964dfb","name":"crystallization","output":true,"outputs":1,"x":1080,"y":200,"wires":[[]]},{"id":"67716ad7.afcce4","type":"function","z":"4910e0b9.0094a","name":"format database querry","func":"d = new Date();\nmsg.payload = [\n    {\n        query: \"begin\"\n    },\n    {\n        query: \"insert into infrared \" +\n        \"(timestamp, username, experiment, absorption)\" +\n        \"values ($1, $2, $3, $4)\",\n        params: [d.getTime(), \"Brent\", \"test\", msg.payload[\"data\"]],\n        output: false,\n    },\n    {\n        query: \"commit\"\n    }\n];\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":200,"wires":[["8707acb.2d79b5"]]},{"id":"953bf49c.a86608","type":"influxdb out","z":"4910e0b9.0094a","influxdb":"2e033692.9a2b6a","name":"IR:1:PEAK1","measurement":"crystallization","precision":"","retentionPolicy":"","x":1290,"y":300,"wires":[]},{"id":"b3232c02.32f07","type":"function","z":"4910e0b9.0094a","name":"format database entry","func":"msg.payload = {\n    \"IR:1:PEAK1\": msg.payload\n}\nreturn msg;","outputs":1,"noerr":0,"x":1060,"y":300,"wires":[["953bf49c.a86608"]]},{"id":"e0268e44.8e0d9","type":"function","z":"4910e0b9.0094a","name":"set peak","func":"flow.set(msg.topic, msg.payload);\nmsg.payload = flow.get(msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":340,"wires":[[]]},{"id":"e0da46df.047848","type":"function","z":"2410a9c4.77f756","name":"format command","func":"let address = null;\nlet value = null;\nflow.set(\"request\", msg.topic);\n\nfunction sendFloat(value, address) {\n    let buf = Buffer.allocUnsafe(4);\n    buf.writeFloatBE(value);\n    let bytes = buf.toJSON()[\"data\"];\n    let reg1 = Buffer.from([bytes[2], bytes[3]]).readUInt16BE();\n    let reg2 = Buffer.from([bytes[0], bytes[1]]).readUInt16BE();\n    \n    setTimeout(function() {\n        node.send({\n                \"payload\": {\n                    \"fc\": 6,\n                    \"unitid\": 253,\n                    \"address\": address,\n                    \"value\": reg1,\n                    \"quantity\": 1\n                }\n        });\n    }, 100);\n    \n    setTimeout(function() {\n        node.send({\n                \"payload\": {\n                    \"fc\": 6,\n                    \"unitid\": 253,\n                    \"address\": address+1,\n                    \"value\": reg2,\n                    \"quantity\": 1\n                }\n        });\n    }, 2000);\n}\n\nfunction sendCoil(value, address) {\n    node.send({\n        \"payload\": {\n            \"fc\": 5,\n            \"unitid\": 253,\n            \"address\": address,\n            \"value\": value,\n            \"quantity\": 1\n        }\n    });\n}\n\nfunction readFloat(address) {\n    node.send({\n        \"payload\": {\n            'fc': 3, \n            'unitid': 253, \n            'address': address, \n            'quantity': 2 \n        }\n    });\n}\n\nswitch (msg.topic) {\n    case \"PUMP:1:RATE:SP\":\n        address = 3800;\n        value = msg.payload;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:2:RATE:SP\":\n        address = 3802;\n        value = msg.payload;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:3:RATE:SP\":\n        address = 3804;\n        value = msg.payload;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:4:RATE:SP\":\n        address = 3806;\n        value = msg.payload;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:1:STATUS\":\n        address = 0;\n        value = msg.payload === true ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:2:STATUS\":\n        address = 2;\n        value = msg.payload === true ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:3:STATUS\":\n        address = null;\n        value = msg.payload === true ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:4:STATUS\":\n        address = null;\n        value = msg.payload === true ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:1:RATE:PV\":\n        address = 3600;\n        readFloat(address);\n        break;\n    case \"PUMP:2:RATE:PV\":\n        address = 3602;\n        readFloat(address);\n        break;\n    case \"PUMP:3:RATE:PV\":\n        address = 3604;\n        readFloat(address);\n        break;\n    case \"PUMP:4:RATE:PV\":\n        address = 3606;\n        readFloat(address);\n        break;\n    default:\n        msg.payload[\"address\"] = NaN;\n        break;\n}","outputs":1,"noerr":0,"x":470,"y":620,"wires":[["1ccd5b6c.04cb45"]]},{"id":"1ccd5b6c.04cb45","type":"function","z":"2410a9c4.77f756","name":"Switch Write / Read","func":"\nif (msg.payload[\"fc\"] == 3) {\n    return [null, msg];\n}\nelse {\n    return [msg, null];\n}","outputs":2,"noerr":0,"x":670,"y":620,"wires":[["7036ad2.8319054"],["650f069b.3421b8"]]},{"id":"fee6c566.d44118","type":"function","z":"2410a9c4.77f756","name":"split pump","func":"let pump = msg.payload[1].equipment.split(\":\")[1];\nlet rate = msg.payload[0].rate;\nmsg.payload = rate;\nswitch (pump) {\n    case \"1\":\n        return [msg, null, null, null];\n    case \"2\":\n        return [null, msg, null, null];\n    case \"3\":\n        return [null, null, msg, null];\n    case \"4\":\n        return [null, null, null, msg];\n}","outputs":4,"noerr":0,"x":970,"y":860,"wires":[["b4afc793.d2b188"],["a12016c2.e83da8"],["a4e24f35.c8512"],["ce291150.b6531"]]},{"id":"dcdb27a5.bc7698","type":"websocket in","z":"55e3c78a.a11168","name":"crystallizer input","server":"81401fd3.c5d93","client":"","x":120,"y":360,"wires":[["f9478852.e51e08","a97c1b80.c6de08"]]},{"id":"72415475.71354c","type":"websocket out","z":"55e3c78a.a11168","name":"crystallizer output","server":"81401fd3.c5d93","client":"","x":890,"y":360,"wires":[]},{"id":"51d653b1.91d48c","type":"function","z":"11cf824.6b7457e","name":"make command","func":"let value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"POWER:SP\":\n        // Default to off\n        let power = value == \"ON\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 \" + power + \" \\r\"\n        });\n        break;\n    case \"MODE:SP\":\n        // Default to bath\n        let mode = value == \"SENSOR\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 0 \\r\"\n        })\n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_04 \" + mode + \" \\r\",\n                \"topic\": msg.topic\n            })\n        }, 300);    \n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_05 1 \\r\"\n            });\n        }, 600);\n        break;\n    case \"TEMP0:SP\":\n        node.send({\n            \"payload\": \"out_sp_00 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP1:SP\":\n        node.send({\n            \"payload\": \"out_sp_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP2:SP\":\n        node.send({\n            \"payload\": \"out_sp_02 \" + value + \" \\r\"\n        });\n        break;\n    case \"WORKING:SP\":\n        node.send({\n            \"payload\": \"out_mode_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"BATH:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_00 \\r\"\n        });\n        break;\n    case \"SENSOR:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_03 \\r\"\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":620,"y":240,"wires":[["6d0f8d54.41ece4"]]},{"id":"7e9a61d7.b476b","type":"function","z":"11cf824.6b7457e","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\")).toFixed(1);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1260,"y":240,"wires":[["10635ea4.117911"]]},{"id":"9db75560.388ed8","type":"delay","z":"11cf824.6b7457e","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":210,"y":240,"wires":[["6afad83.ee67428"]]},{"id":"6afad83.ee67428","type":"function","z":"11cf824.6b7457e","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":240,"wires":[["51d653b1.91d48c"]]},{"id":"c2773cb3.1c9c8","type":"function","z":"11cf824.6b7457e","name":"simulate","func":"let initialState = {\n    \"POWER:SP\": \"OFF\",\n    \"POWER:PV\": \"OFF\",\n    \"MODE:SP\": \"BATH\",\n    \"MODE:PV\": \"BATH\",\n    \"TEMP0:SP\": \"620\",\n    \"BATH:TEMP:PV\": \"28\",\n    \"SENSOR:TEMP:PV\": \"19\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"BATH:POWER:SP\":\n        state[\"POWER:SP\"] = value;\n        state[\"POWER:PV\"] = value;\n        break;\n    case \"BATH:MODE:SP\":\n        state[\"MODE:SP\"] = value;\n        state[\"MODE:PV\"] = value;\n        break;\n    case \"TEMP0:SP\":\n        state[\"TEMP0:SP\"] = value;\n        context.set(\"state\", state);\n        break;\n    case \"BATH:TEMP:PV\":\n    case \"SENSOR:TEMP:PV\":\n        let SP = Number(state[\"TEMP0:SP\"]);\n        let PV = Number(state[\"BATH:TEMP:PV\"]);\n        PV = PV + 0.15 * (SP - PV) + Math.random() - 0.5;\n        state[\"BATH:TEMP:PV\"] = String(PV);\n        PV = Number(state[\"SENSOR:TEMP:PV\"]);\n        PV = PV + 0.05 * (SP - PV) + Math.random() - 0.5;\n        state[\"SENSOR:TEMP:PV\"] = String(PV);\n        node.send({\n            \"payload\": Buffer.from(state[\"BATH:TEMP:PV\"])\n        })\n        break\n    default:\n        break;\n}\ncontext.set(\"state\", state);\n","outputs":1,"noerr":0,"x":1040,"y":240,"wires":[["7e9a61d7.b476b"]]},{"id":"6d0f8d54.41ece4","type":"function","z":"11cf824.6b7457e","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":830,"y":240,"wires":[[],["c2773cb3.1c9c8"]]},{"id":"d92dfa39.c24ee8","type":"function","z":"ea68757c.e04a88","name":"make command","func":"let value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"POWER:SP\":\n        // Default to off\n        let power = value == \"ON\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 \" + power + \" \\r\"\n        });\n        break;\n    case \"MODE:SP\":\n        // Default to bath\n        let mode = value == \"SENSOR\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 0 \\r\"\n        })\n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_04 \" + mode + \" \\r\",\n                \"topic\": msg.topic\n            })\n        }, 300);    \n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_05 1 \\r\"\n            });\n        }, 600);\n        break;\n    case \"TEMP0:SP\":\n        node.send({\n            \"payload\": \"out_sp_00 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP1:SP\":\n        node.send({\n            \"payload\": \"out_sp_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP2:SP\":\n        node.send({\n            \"payload\": \"out_sp_02 \" + value + \" \\r\"\n        });\n        break;\n    case \"WORKING:SP\":\n        node.send({\n            \"payload\": \"out_mode_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"BATH:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_00 \\r\"\n        });\n        break;\n    case \"SENSOR:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_03 \\r\"\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":620,"y":220,"wires":[["383c9c2e.aac044"]]},{"id":"1e52d001.bbd9","type":"function","z":"ea68757c.e04a88","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\")).toFixed(1);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1260,"y":220,"wires":[["3d036394.1bd63c"]]},{"id":"e6da5843.634928","type":"delay","z":"ea68757c.e04a88","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":210,"y":220,"wires":[["bf2eb48f.8d52a8"]]},{"id":"bf2eb48f.8d52a8","type":"function","z":"ea68757c.e04a88","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":220,"wires":[["d92dfa39.c24ee8"]]},{"id":"91e34190.9d1fd","type":"function","z":"ea68757c.e04a88","name":"simulate","func":"let initialState = {\n    \"POWER:SP\": \"OFF\",\n    \"POWER:PV\": \"OFF\",\n    \"MODE:SP\": \"BATH\",\n    \"MODE:PV\": \"BATH\",\n    \"TEMP0:SP\": \"15\",\n    \"BATH:TEMP:PV\": \"19\",\n    \"SENSOR:TEMP:PV\": \"19\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"BATH:POWER:SP\":\n        state[\"POWER:SP\"] = value;\n        state[\"POWER:PV\"] = value;\n        break;\n    case \"BATH:MODE:SP\":\n        state[\"MODE:SP\"] = value;\n        state[\"MODE:PV\"] = value;\n        break;\n    case \"TEMP0:SP\":\n        state[\"TEMP0:SP\"] = value;\n        context.set(\"state\", state);\n        break;\n    case \"BATH:TEMP:PV\":\n    case \"SENSOR:TEMP:PV\":\n        let SP = Number(state[\"TEMP0:SP\"]);\n        let PV = Number(state[\"BATH:TEMP:PV\"]);\n        PV = PV + 0.15 * (SP - PV) + Math.random() - 0.5;\n        state[\"BATH:TEMP:PV\"] = String(PV);\n        PV = Number(state[\"SENSOR:TEMP:PV\"]);\n        PV = PV + 0.05 * (SP - PV) + Math.random() - 0.5;\n        state[\"SENSOR:TEMP:PV\"] = String(PV);\n        node.send({\n            \"payload\": Buffer.from(state[\"BATH:TEMP:PV\"])\n        })\n        break\n    default:\n        break;\n}\ncontext.set(\"state\", state);\n","outputs":1,"noerr":0,"x":1040,"y":260,"wires":[["1e52d001.bbd9"]]},{"id":"383c9c2e.aac044","type":"function","z":"ea68757c.e04a88","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":830,"y":220,"wires":[[],["91e34190.9d1fd"]]},{"id":"10635ea4.117911","type":"link out","z":"11cf824.6b7457e","name":"TCU:2 flow out","links":["1e5e418d.462e6e","e04fae30.08d54"],"x":1415,"y":240,"wires":[]},{"id":"f0f093f6.e4bff","type":"link in","z":"11cf824.6b7457e","name":"TCU:2 flow in","links":["b501edf2.c4c1c","2bf50567.6b850a"],"x":75,"y":240,"wires":[["9db75560.388ed8"]]},{"id":"3d036394.1bd63c","type":"link out","z":"ea68757c.e04a88","name":"TCU:3 flow out","links":["2a3d1ae5.1f6576","dde2f177.542b1"],"x":1415,"y":220,"wires":[]},{"id":"a409e78b.cae968","type":"link in","z":"ea68757c.e04a88","name":"TCU:3 flow in","links":["1a3b4421.f9e5bc","965f3454.36b938"],"x":75,"y":220,"wires":[["e6da5843.634928"]]},{"id":"ad4c653e.df32b8","type":"function","z":"7a4bbbcd.f3de04","name":"make command","func":"let value = String(msg.payload.value);\nlet cmdStr = \"\"\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        if (value === \"ON\") {\n            cmdStr = \"START_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        else if (value === \"OFF\") {\n            cmdStr = \"STOP_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        break;\n    case \"SPEED:SP\":\n        cmdStr = \"OUT_SP_4\" + \" \" + String(msg.payload);\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    case \"SPEED:PV\":\n        cmdStr = \"IN_PV_4\" + \" \";\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":640,"y":200,"wires":[["191a431d.2072fd"]]},{"id":"b606fb64.0df4b8","type":"function","z":"7a4bbbcd.f3de04","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\").split(\" \")[0]).toFixed(0);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1280,"y":200,"wires":[["1b20cc2c.950494"]]},{"id":"d01e3b96.d93248","type":"delay","z":"7a4bbbcd.f3de04","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":230,"y":200,"wires":[["547b5265.72c7fc"]]},{"id":"547b5265.72c7fc","type":"function","z":"7a4bbbcd.f3de04","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":200,"wires":[["ad4c653e.df32b8"]]},{"id":"100fd0b.caacb2f","type":"function","z":"7a4bbbcd.f3de04","name":"simulate","func":"let initialState = {\n    \"STATUS:SP\": \"STOPPED\",\n    \"STATUS:PV\": \"STOPPED\",\n    \"SPEED:SP\": \"0\",\n    \"SPEED:PV\": \"0\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        state[\"STATUS:SP\"] = value;\n        state[\"STATUS:PV\"] = value;\n        break;\n    case \"SPEED:SP\":\n        state[\"SPEED:SP\"] = value;\n        break;\n    case \"SPEED:PV\":\n        state[\"SPEED:PV\"] = Number(state[\"SPEED:SP\"]) + 4*(Math.random()-0.5);\n        node.send({\n            \"payload\": state[\"SPEED:PV\"] + \" \" + \"rpm\" // check\n        })\n        break;\n    default:\n        break;\n}\ncontext.set(\"state\", state);","outputs":1,"noerr":0,"x":1060,"y":240,"wires":[["b606fb64.0df4b8","d6053434.d843e8"]]},{"id":"191a431d.2072fd","type":"function","z":"7a4bbbcd.f3de04","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":850,"y":200,"wires":[[],["100fd0b.caacb2f"]]},{"id":"1b20cc2c.950494","type":"link out","z":"7a4bbbcd.f3de04","name":"STIR:1 flow out","links":["b2706e13.219b","22ecd0f3.51e16"],"x":1435,"y":200,"wires":[]},{"id":"982c6e0f.40a71","type":"link in","z":"7a4bbbcd.f3de04","name":"STIR:1 flow in","links":["606592f0.f0e75c","9e57fd17.f519d"],"x":95,"y":200,"wires":[["d01e3b96.d93248"]]},{"id":"1d5ee3e9.d99c3c","type":"function","z":"7b3ed3e0.a30c8c","name":"make command","func":"let value = String(msg.payload.value);\nlet cmdStr = \"\"\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        if (value === \"ON\") {\n            cmdStr = \"START_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        else if (value === \"OFF\") {\n            cmdStr = \"STOP_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        break;\n    case \"SPEED:SP\":\n        cmdStr = \"OUT_SP_4\" + \" \" + String(msg.payload);\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    case \"SPEED:PV\":\n        cmdStr = \"IN_PV_4\" + \" \";\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":640,"y":220,"wires":[["7e9d2a9f.b76194"]]},{"id":"7e7014a7.7d2a7c","type":"function","z":"7b3ed3e0.a30c8c","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\").split(\" \")[0]);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1280,"y":220,"wires":[["d15b9d0a.c99e2"]]},{"id":"f88fc537.497818","type":"delay","z":"7b3ed3e0.a30c8c","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":230,"y":220,"wires":[["e8f1d0dc.33924"]]},{"id":"e8f1d0dc.33924","type":"function","z":"7b3ed3e0.a30c8c","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":220,"wires":[["1d5ee3e9.d99c3c"]]},{"id":"d9f61d93.360ad","type":"function","z":"7b3ed3e0.a30c8c","name":"simulate","func":"let initialState = {\n    \"STATUS:SP\": \"STOPPED\",\n    \"STATUS:PV\": \"STOPPED\",\n    \"SPEED:SP\": \"0\",\n    \"SPEED:PV\": \"0\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        state[\"STATUS:SP\"] = value;\n        state[\"STATUS:PV\"] = Number(value) + 2 * (Math.random() - 0.5);\n        break;\n    case \"SPEED:SP\":\n        state[\"SP\"] = value;\n        break;\n    case \"SPEED:PV\":\n        state[\"SPEED:PV\"] = state[\"SPEED:SP\"];\n        node.send({\n            \"payload\": state[\"SPEED:PV\"] + \" \" + \"rpm\" // check\n        })\n        break;\n    default:\n        break;\n}\ncontext.set(\"state\", state);","outputs":1,"noerr":0,"x":1060,"y":260,"wires":[["7e7014a7.7d2a7c"]]},{"id":"7e9d2a9f.b76194","type":"function","z":"7b3ed3e0.a30c8c","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":850,"y":220,"wires":[[],["d9f61d93.360ad"]]},{"id":"17f59762.25f1e9","type":"function","z":"911ec690.702d28","name":"make command","func":"let value = String(msg.payload.value);\nlet cmdStr = \"\"\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        if (value === \"ON\") {\n            cmdStr = \"START_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        else if (value === \"OFF\") {\n            cmdStr = \"STOP_4\" + \" \";\n            cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n            node.send({\n                \"payload\": cmdStr,\n                \"topic\": msg.topic\n            });\n        }\n        break;\n    case \"SPEED:SP\":\n        cmdStr = \"OUT_SP_4\" + \" \" + String(msg.payload);\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    case \"SPEED:PV\":\n        cmdStr = \"IN_PV_4\" + \" \";\n        cmdStr = cmdStr + String.fromCodePoint(13) + \" \" + String.fromCodePoint(10);\n        node.send({\n            \"payload\": cmdStr,\n            \"topic\": msg.topic\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":620,"y":180,"wires":[["36812b08.ccb9c4"]]},{"id":"1fc964ee.2411db","type":"function","z":"911ec690.702d28","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\").split(\" \")[0]);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1260,"y":180,"wires":[["ce2b0fed.3e4e6"]]},{"id":"196011.4b159ff","type":"delay","z":"911ec690.702d28","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":210,"y":180,"wires":[["26929873.5e9428"]]},{"id":"26929873.5e9428","type":"function","z":"911ec690.702d28","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":180,"wires":[["17f59762.25f1e9"]]},{"id":"94127765.9f2618","type":"function","z":"911ec690.702d28","name":"simulate","func":"let initialState = {\n    \"STATUS:SP\": \"STOPPED\",\n    \"STATUS:PV\": \"STOPPED\",\n    \"SPEED:SP\": \"0\",\n    \"SPEED:PV\": \"0\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        state[\"STATUS:SP\"] = value;\n        state[\"STATUS:PV\"] = Number(value) + 2 * (Math.random() - 0.5);\n        break;\n    case \"SPEED:SP\":\n        state[\"SP\"] = value;\n        break;\n    case \"SPEED:PV\":\n        state[\"SPEED:PV\"] = state[\"SPEED:SP\"];\n        node.send({\n            \"payload\": state[\"SPEED:PV\"] + \" \" + \"rpm\" // check\n        })\n        break;\n    default:\n        break;\n}\ncontext.set(\"state\", state);","outputs":1,"noerr":0,"x":1040,"y":220,"wires":[["1fc964ee.2411db"]]},{"id":"36812b08.ccb9c4","type":"function","z":"911ec690.702d28","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":830,"y":180,"wires":[[],["94127765.9f2618"]]},{"id":"d15b9d0a.c99e2","type":"link out","z":"7b3ed3e0.a30c8c","name":"STIR:2 flow out","links":["6be64fa.30a9bb","a1fa26be.46f738"],"x":1415,"y":220,"wires":[]},{"id":"17b9962d.65aafa","type":"link in","z":"7b3ed3e0.a30c8c","name":"STIR:2 flow in","links":["f381a12e.b52ca","b15827f7.386f28"],"x":95,"y":220,"wires":[["f88fc537.497818"]]},{"id":"ce2b0fed.3e4e6","type":"link out","z":"911ec690.702d28","name":"STIR:3 flow out","links":["854c714f.cd55a","5da417be.079c88"],"x":1420,"y":180,"wires":[]},{"id":"39140bfe.0f1894","type":"link in","z":"911ec690.702d28","name":"STIR:3 flow in","links":["7ac04ba7.cce464","ee1c044.cd384f8"],"x":75,"y":180,"wires":[["196011.4b159ff"]]},{"id":"f9d632a0.94a47","type":"function","z":"7589d737.394208","name":"make command","func":"let value = String(msg.payload.value);\n\nlet address = null;\n\nfunction sendFloat(value, address) {\n    let buf = Buffer.allocUnsafe(4);\n    buf.writeFloatBE(value);\n    let bytes = buf.toJSON()[\"data\"];\n    let reg1 = Buffer.from([bytes[2], bytes[3]]).readUInt16BE();\n    let reg2 = Buffer.from([bytes[0], bytes[1]]).readUInt16BE();\n    \n    setTimeout(function() {\n        node.send({\n                \"payload\": {\n                    \"fc\": 6,\n                    \"unitid\": 253,\n                    \"address\": address,\n                    \"value\": reg1,\n                    \"quantity\": 1\n                }\n        });\n    }, 100);\n    \n    setTimeout(function() {\n        node.send({\n                \"payload\": {\n                    \"fc\": 6,\n                    \"unitid\": 253,\n                    \"address\": address+1,\n                    \"value\": reg2,\n                    \"quantity\": 1\n                }\n        });\n    }, 2000);\n}\n\nfunction sendCoil(value, address) {\n    node.send({\n        \"payload\": {\n            \"fc\": 5,\n            \"unitid\": 253,\n            \"address\": address,\n            \"value\": value,\n            \"quantity\": 1\n        }\n    });\n}\n\nfunction readFloat(address) {\n    node.send({\n        \"payload\": {\n            'fc': 3, \n            'unitid': 253, \n            'address': address, \n            'quantity': 2 \n        }\n    });\n}\n\nswitch (msg.payload.command) {\n    case \"PUMP:1:RATE:SP\":\n        address = 3800;\n        value = value;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:2:RATE:SP\":\n        address = 3802;\n        value = value;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:3:RATE:SP\":\n        address = 3804;\n        value = value;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:4:RATE:SP\":\n        address = 3806;\n        value = value;\n        sendFloat(value, address);\n        break;\n    case \"PUMP:1:STATUS:SP\":\n        address = 0;\n        value = value === \"STARTED\" ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:2:STATUS:SP\":\n        address = 2;\n        value = value === \"STARTED\" ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:3:STATUS:SP\":\n        address = null;\n        value = value === \"STARTED\" ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:4:STATUS:SP\":\n        address = null;\n        value = value === \"STARTED\" ? 1 : 0;\n        sendCoil(value, address);\n        break;\n    case \"PUMP:1:RATE:PV\":\n        address = 3600;\n        readFloat(address);\n        break;\n    case \"PUMP:2:RATE:PV\":\n        address = 3602;\n        readFloat(address);\n        break;\n    case \"PUMP:3:RATE:PV\":\n        address = 3604;\n        readFloat(address);\n        break;\n    case \"PUMP:4:RATE:PV\":\n        address = 3606;\n        readFloat(address);\n        break;\n    default:\n        msg.payload[\"address\"] = NaN;\n        break;\n}","outputs":1,"noerr":0,"x":800,"y":420,"wires":[["21e66d64.d34e02"]]},{"id":"c6c65c95.6d37c","type":"function","z":"7589d737.394208","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\"))\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1680,"y":480,"wires":[["ebe7cbde.2a2888"]]},{"id":"94c7db58.1a8dd8","type":"delay","z":"7589d737.394208","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":190,"y":480,"wires":[["9f15f99a.8998f8"]]},{"id":"9f15f99a.8998f8","type":"function","z":"7589d737.394208","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":480,"wires":[["b9664504.5cbc48"]]},{"id":"21e66d64.d34e02","type":"function","z":"7589d737.394208","name":"Switch Write / Read","func":"\nif (msg.payload[\"fc\"] == 3) {\n    return [null, msg];\n}\nelse {\n    return [msg, null];\n}","outputs":2,"noerr":0,"x":1030,"y":420,"wires":[["79e780c5.890c8"],["9b99ff87.94e27"]]},{"id":"79e780c5.890c8","type":"modbus-flex-write","z":"7589d737.394208","name":"","showStatusActivities":true,"showErrors":true,"server":"6ecea805.65f538","x":1270,"y":360,"wires":[[],[]]},{"id":"9b99ff87.94e27","type":"modbus-flex-getter","z":"7589d737.394208","name":"Modbus Flexible Read","showStatusActivities":true,"showErrors":true,"logIOActivities":false,"server":"6ecea805.65f538","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":1280,"y":420,"wires":[[],["53c02364.289a4c"]]},{"id":"53c02364.289a4c","type":"function","z":"7589d737.394208","name":"read buffer","func":"let ba = msg.payload[\"buffer\"].toJSON()[\"data\"];\nba = [ba[2], ba[3], ba[0], ba[1]];\nbuf = Buffer.from(ba);\nvalue = buf.readFloatBE(buf);\nmsg.payload = value.toFixed(2);\nreturn msg;","outputs":1,"noerr":0,"x":1490,"y":420,"wires":[["c6c65c95.6d37c"]]},{"id":"b9664504.5cbc48","type":"function","z":"7589d737.394208","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":580,"y":480,"wires":[["f9d632a0.94a47"],["9320e98c.8f7d88"]]},{"id":"9320e98c.8f7d88","type":"function","z":"7589d737.394208","name":"simulate","func":"let pumpState = {\n    \"STATUS:SP\": \"OFF\",\n    \"STATUS:PV\": \"OFF\",\n    \"RATE:SP\": \"0\",\n    \"RATE:PV\": \"0\"\n};\nlet initialState = {\n    \"PUMP:1\": pumpState,\n    \"PUMP:2\": pumpState,\n    \"PUMP:3\": pumpState,\n    \"PUMP:4\": pumpState\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet equipment = msg.payload.equipment;\nlet value = String(msg.payload.value);\n\nswitch (msg.payload.command) {\n    case \"STATUS:SP\":\n        state[equipment][\"STATUS:SP\"] = value;\n        state[equipment][\"STATUS:PV\"] = value;\n        break;\n    case \"RATE:SP\":\n        state[equipment][\"RATE:SP\"] = value;\n        break;\n    case \"RATE:PV\":\n        state[equipment][\"RATE:PV\"] = state[equipment][\"RATE:SP\"];\n        node.send({\n            \"payload\": state[equipment][\"RATE:PV\"]\n        })\n        break\n    default:\n        break;\n}\ncontext.set(\"state\", state);","outputs":1,"noerr":0,"x":1160,"y":520,"wires":[["c6c65c95.6d37c"]]},{"id":"385951d7.ee697e","type":"function","z":"8e62d41a.e07718","name":"make command","func":"let value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"POWER:SP\":\n        // Default to off\n        let power = value == \"ON\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 \" + power + \" \\r\"\n        });\n        break;\n    case \"MODE:SP\":\n        // Default to bath\n        let mode = value == \"SENSOR\" ? \"1\" : \"0\"\n        node.send({\n            \"payload\": \"out_mode_05 0 \\r\"\n        })\n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_04 \" + mode + \" \\r\",\n                \"topic\": msg.topic\n            })\n        }, 300);    \n        setTimeout(function() {\n            node.send({\n                \"payload\": \"out_mode_05 1 \\r\"\n            });\n        }, 600);\n        break;\n    case \"TEMP0:SP\":\n        node.send({\n            \"payload\": \"out_sp_00 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP1:SP\":\n        node.send({\n            \"payload\": \"out_sp_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"TEMP2:SP\":\n        node.send({\n            \"payload\": \"out_sp_02 \" + value + \" \\r\"\n        });\n        break;\n    case \"WORKING:SP\":\n        node.send({\n            \"payload\": \"out_mode_01 \" + value + \" \\r\"\n        });\n        break;\n    case \"BATH:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_00 \\r\"\n        });\n        break;\n    case \"SENSOR:TEMP:PV\":\n        node.send({\n            \"payload\": \"in_pv_03 \\r\"\n        });\n        break;\n    default:\n        break;\n}","outputs":1,"noerr":0,"x":660,"y":240,"wires":[["1f84e4a1.3375fb"]]},{"id":"fca67b66.ddbf88","type":"function","z":"8e62d41a.e07718","name":"format response","func":"let value = Number(msg.payload.toString(\"utf8\")).toFixed(1);\nmsg.payload = flow.get(\"payload\");\nmsg.topic = flow.get(\"topic\");\nmsg.payload.value = value;\nreturn msg;","outputs":1,"noerr":0,"x":1300,"y":240,"wires":[["e0bcd98a.85d278"]]},{"id":"125ba9ae.376706","type":"delay","z":"8e62d41a.e07718","name":"limit msg rate","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":250,"y":240,"wires":[["baf82ea8.501e"]]},{"id":"baf82ea8.501e","type":"function","z":"8e62d41a.e07718","name":"set flow variables","func":"flow.set(\"payload\", msg.payload);\nflow.set(\"topic\", msg.topic);\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":240,"wires":[["385951d7.ee697e"]]},{"id":"9f77a270.096a8","type":"link in","z":"8e62d41a.e07718","name":"TCU:1 flow in","links":["98b1e7b0.315608","d47b1c7c.45e9d"],"x":115,"y":240,"wires":[["125ba9ae.376706"]]},{"id":"e0bcd98a.85d278","type":"link out","z":"8e62d41a.e07718","name":"TCU:1 flow out","links":["e497f18e.96f0c","103ee750.a13759"],"x":1455,"y":240,"wires":[]},{"id":"af1167a2.0535c8","type":"function","z":"8e62d41a.e07718","name":"simulate","func":"let initialState = {\n    \"POWER:SP\": \"OFF\",\n    \"POWER:PV\": \"OFF\",\n    \"MODE:SP\": \"BATH\",\n    \"MODE:PV\": \"BATH\",\n    \"TEMP0:SP\": \"80\",\n    \"BATH:TEMP:PV\": \"25\",\n    \"SENSOR:TEMP:PV\": \"20\"\n};\nlet state = context.get(\"state\") || initialState\n\nmsg.payload = flow.get(\"payload\");\nlet value = String(msg.payload.value);\nswitch (msg.payload.command) {\n    case \"BATH:POWER:SP\":\n        state[\"POWER:SP\"] = value;\n        state[\"POWER:PV\"] = value;\n        break;\n    case \"BATH:MODE:SP\":\n        state[\"MODE:SP\"] = value;\n        state[\"MODE:PV\"] = value;\n        break;\n    case \"TEMP0:SP\":\n        state[\"TEMP0:SP\"] = value;\n        context.set(\"state\", state);\n        break;\n    case \"BATH:TEMP:PV\":\n    case \"SENSOR:TEMP:PV\":\n        let SP = Number(state[\"TEMP0:SP\"]);\n        let PV = Number(state[\"BATH:TEMP:PV\"]);\n        PV = PV + 0.02 * (SP - PV) + Math.random() - 0.5;\n        state[\"BATH:TEMP:PV\"] = String(PV);\n        PV = Number(state[\"SENSOR:TEMP:PV\"]);\n        PV = PV + 0.01 * (SP - PV) + Math.random() - 0.5;\n        state[\"SENSOR:TEMP:PV\"] = String(PV);\n        node.send({\n            \"payload\": Buffer.from(state[\"BATH:TEMP:PV\"])\n        })\n        break\n    default:\n        break;\n}\ncontext.set(\"state\", state);\n","outputs":1,"noerr":0,"x":1080,"y":280,"wires":[["fca67b66.ddbf88"]]},{"id":"1f84e4a1.3375fb","type":"function","z":"8e62d41a.e07718","name":"check simulate","func":"let simulate = global.get(\"simulate\");\nif (!simulate) {\n    return [msg, null];\n}\nelse {\n    return [null, msg];\n}","outputs":2,"noerr":0,"x":870,"y":240,"wires":[["612ea032.5460d"],["af1167a2.0535c8"]]},{"id":"612ea032.5460d","type":"tcp request","z":"8e62d41a.e07718","server":"192.168.1.111","port":"5000","out":"sit","splitc":" ","name":"192.168.1.111","x":1080,"y":200,"wires":[["fca67b66.ddbf88"]]},{"id":"ebe7cbde.2a2888","type":"link out","z":"7589d737.394208","name":"PLC flow out","links":["efd24f9e.fa719","70ff9b19.d2a8a4"],"x":1815,"y":480,"wires":[]},{"id":"b2a835f1.21bb88","type":"link in","z":"7589d737.394208","name":"PLC flow in","links":["c9407ff.bdb0e8","d67904d7.d05d68"],"x":55,"y":480,"wires":[["94c7db58.1a8dd8"]]},{"id":"d6053434.d843e8","type":"debug","z":"7a4bbbcd.f3de04","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1220,"y":300,"wires":[]},{"id":"4578460c.f9fe08","type":"link in","z":"e0b529b0.845718","name":"CRYSTALLIZER flow in","links":["1b968e6e.5fc202"],"x":515,"y":340,"wires":[["364f4eef.49e752","4bdd9c3a.f695d4"]]},{"id":"364f4eef.49e752","type":"function","z":"e0b529b0.845718","name":"macros","func":"function setState(state) {\n    for (let [equipment, commands] of Object.entries(state)) {\n        for (let [command, value] of Object.entries(commands)) {\n            node.send([\n                {\n                \"payload\": {\"equipment\": equipment, \"command\": command, \"value\": value}\n                },\n                null\n            ]);\n        }\n    }\n}\n\nlet equipment = msg.payload.equipment;\nlet command = msg.payload.command;\n\nif (equipment == \"CRYSTALLIZER\") {\n    let state = null;\n    if (command === \"HALT\") {\n        node.log(\"Halting crystallizer.\");\n        state = flow.get(\"haltSP\");\n        setState(state);\n    }\n    else if (command === \"INITIALIZE\") {\n        node.log(\"Initiallizing crystallizer\");\n        state = flow.get(\"intializeSP\");\n        setState(state);\n    }\n}\nelse {\n    return msg;\n}","outputs":1,"noerr":0,"x":680,"y":340,"wires":[["22acd367.86fc2c"]]},{"id":"1b968e6e.5fc202","type":"link out","z":"55e3c78a.a11168","name":"to CRYSTALLIZER","links":["4578460c.f9fe08"],"x":515,"y":360,"wires":[]},{"id":"a8b48e27.deb95","type":"link out","z":"46d2018c.b98e9","name":"flow simulate out","links":["22ed7717.1dc528","2154b275.228b6e"],"x":775,"y":300,"wires":[]},{"id":"3f4d3783.905558","type":"link in","z":"46d2018c.b98e9","name":"flow simulate in","links":["1575ca6e.a37976","fb83830c.6b5c","78369e89.ffddb","950c51d3.b452d"],"x":375,"y":300,"wires":[["3b934d6e.3fbfb2"]]},{"id":"f9478852.e51e08","type":"debug","z":"55e3c78a.a11168","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":470,"y":420,"wires":[]},{"id":"4bdd9c3a.f695d4","type":"debug","z":"e0b529b0.845718","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":590,"y":440,"wires":[]},{"id":"d538ff70.ac2dc","type":"inject","z":"e0b529b0.845718","name":"initialize","topic":"","payload":"{\"equipment\":\"CRYSTALLIZER\",\"command\":\"INITIALIZE\"}","payloadType":"json","repeat":"","crontab":"","once":true,"onceDelay":".5","x":100,"y":280,"wires":[["e26a1145.a49"]]},{"id":"d47b1c7c.45e9d","type":"link out","z":"e0b529b0.845718","name":"TCU:1 socket out","links":["9f77a270.096a8"],"x":1455,"y":180,"wires":[]},{"id":"9e57fd17.f519d","type":"link out","z":"e0b529b0.845718","name":"STIR:1 socket out","links":["982c6e0f.40a71"],"x":1455,"y":300,"wires":[]},{"id":"b15827f7.386f28","type":"link out","z":"e0b529b0.845718","name":"STIR:2 socket out","links":["17b9962d.65aafa"],"x":1455,"y":340,"wires":[]},{"id":"ee1c044.cd384f8","type":"link out","z":"e0b529b0.845718","name":"STIR:3 socket out","links":["39140bfe.0f1894"],"x":1455,"y":380,"wires":[]},{"id":"965f3454.36b938","type":"link out","z":"e0b529b0.845718","name":"TCU:3 socket out","links":["a409e78b.cae968"],"x":1455,"y":260,"wires":[]},{"id":"2bf50567.6b850a","type":"link out","z":"e0b529b0.845718","name":"TCU:2 socket out","links":["f0f093f6.e4bff"],"x":1455,"y":220,"wires":[]},{"id":"d67904d7.d05d68","type":"link out","z":"e0b529b0.845718","name":"PLC socket out","links":["b2a835f1.21bb88"],"x":1455,"y":420,"wires":[]},{"id":"5b0a594d.b141b8","type":"function","z":"e0b529b0.845718","name":"equipment switch","func":"var messages = new Array(10).fill(null);\n\nswitch (msg.payload.equipment) {\n    case \"TCU:1\":\n        messages[0] = msg;\n        return messages;\n    case \"TCU:2\":\n        messages[1] = msg;\n        return messages;\n    case \"TCU:3\":\n        messages[2] = msg;\n        return messages;\n    case \"STIR:1\":\n        messages[3] = msg;\n        return messages;\n    case \"STIR:2\":\n        messages[4] = msg;\n        return messages;\n    case \"STIR:3\":\n        messages[5] = msg;\n        return messages;\n    case \"PUMP:1\":\n    case \"PUMP:2\":\n    case \"PUMP:3\":\n        messages[6] = msg;\n        return messages;\n    case \"IR:1\":\n        messages[7] = msg;\n        return messages;\n    case \"FBRM:1\":\n        messages[8] = msg;\n        return messages\n    default:\n        break;\n}","outputs":9,"noerr":0,"x":1250,"y":340,"wires":[["d47b1c7c.45e9d"],["2bf50567.6b850a"],["965f3454.36b938"],["9e57fd17.f519d"],["b15827f7.386f28"],["ee1c044.cd384f8"],["d67904d7.d05d68"],["c23d80ec.99255"],["7982a7d9.09a9b8"]],"info":"Take incoming requests and direct them to the flow that handles\nthat particular piece of equipment."},{"id":"c23d80ec.99255","type":"link out","z":"e0b529b0.845718","name":"to IR","links":[],"x":1455,"y":460,"wires":[]},{"id":"7982a7d9.09a9b8","type":"link out","z":"e0b529b0.845718","name":"to FBRM","links":[],"x":1455,"y":500,"wires":[]},{"id":"e26a1145.a49","type":"function","z":"e0b529b0.845718","name":"set flow variables","func":"node.log(\"Initialize crystallizer states and macros.\")\n\n// Initialize SPs\nlet metaData =  {\n    \"USER:SP\": \"FAST Engineer\",\n    \"STATUS:SP\": \"Running\",\n    \"EXPERIMENT:SP\": \"Crystallization\",\n    \"MODE:SP\": \"SIMULATION\"\n};\nflow.set(\"metaData\", metaData); // Need to set this as not held in real equipment.\n\nlet TCU = {\n    \"POWER:SP\": \"ON\", \n    \"MODE:SP\": \"SENSOR\",\n    \"TEMP:SP\": 80\n};\nlet STIR = {\n    \"STATUS:SP\": \"STARTED\",\n    \"SPEED:SP\": 200\n};\nlet PUMP = {\n    \"STATUS:SP\": \"STARTED\",\n    \"RATE:SP\": 3.0\n};\nlet VALVES = {\n    \"STATE:SP\": {\"A\": \"CLOSED\", \"B\": \"CLOSED\", \"C\": \"CLOSED\", \"D\": \"CLOSED\", \"E\": \"CLOSED\"}\n}\nflow.set(\"intializeSP\", {\n    \"metaData\": Object.assign({}, metaData),\n    \"TCU:1\": Object.assign({}, TCU),\n    \"TCU:2\": Object.assign({}, TCU),\n    \"TCU:3\": Object.assign({}, TCU),\n    \"STIR:1\": Object.assign({}, STIR),\n    \"STIR:2\": Object.assign({}, STIR),\n    \"STIR:3\": Object.assign({}, STIR),\n    \"PUMP:1\": Object.assign({}, PUMP),\n    \"PUMP:2\": Object.assign({}, PUMP),\n    \"PUMP:3\": Object.assign({}, PUMP),\n    \"PUMP:FEED\": Object.assign({}, PUMP),\n    \"VALVES\": Object.assign({}, VALVES)\n});\n\n// HALT SPs\nmetaData =  {\n    \"USER:SP\": \"FAST Engineer\",\n    \"STATUS:SP\": \"Halted\",\n    \"EXPERIMENT:SP\": \"Crystallization\",\n    \"MODE:SP\": \"SIMULATION\"\n};\nTCU = {\n    \"POWER:SP\": \"OFF\", \n    \"MODE:SP\": \"SENSOR\",\n    \"TEMP:SP\": 22\n};\nSTIR = {\n    \"STATUS:SP\": \"STOPPED\",\n    \"SPEED:SP\": 0\n};\nPUMP = {\n    \"STATUS:SP\": \"STOPPED\",\n    \"RATE:SP\": 0.0\n};\nVALVES = {\n    \"STATE:SP\": {\"A\": \"CLOSED\", \"B\": \"CLOSED\", \"C\": \"CLOSED\", \"D\": \"CLOSED\", \"E\": \"CLOSED\"}\n}\nflow.set(\"haltSP\", {\n    \"metaData\": Object.assign({}, metaData),\n    \"TCU:1\": Object.assign({}, TCU),\n    \"TCU:2\": Object.assign({}, TCU),\n    \"TCU:3\": Object.assign({}, TCU),\n    \"STIR:1\": Object.assign({}, STIR),\n    \"STIR:2\": Object.assign({}, STIR),\n    \"STIR:3\": Object.assign({}, STIR),\n    \"PUMP:1\": Object.assign({}, PUMP),\n    \"PUMP:2\": Object.assign({}, PUMP),\n    \"PUMP:3\": Object.assign({}, PUMP),\n    \"PUMP:FEED\": Object.assign({}, PUMP),\n    \"VALVES\": Object.assign({}, VALVES)\n});\n\n// Read tags (i.e. PVs)\nflow.set(\"readTags\", [\n    {\"equipment\": \"metaData\", \"command\": \"USER:PV\"},\n    {\"equipment\": \"metaData\", \"command\": \"STATUS:PV\"},\n    {\"equipment\": \"metaData\", \"command\": \"EXPERIMENT:PV\"},\n    {\"equipment\": \"metaData\", \"command\": \"MODE:PV\"},\n    {\"equipment\": \"TCU:1\", \"command\": \"BATH:TEMP:PV\"},\n    {\"equipment\": \"TCU:1\", \"command\": \"SENSOR:TEMP:PV\"},\n    {\"equipment\": \"TCU:1\", \"command\": \"MODE:PV\"},\n    {\"equipment\": \"TCU:2\", \"command\": \"BATH:TEMP:PV\"},\n    {\"equipment\": \"TCU:2\", \"command\": \"SENSOR:TEMP:PV\"},\n    {\"equipment\": \"TCU:2\", \"command\": \"MODE:PV\"},\n    {\"equipment\": \"TCU:3\", \"command\": \"BATH:TEMP:PV\"},\n    {\"equipment\": \"TCU:3\", \"command\": \"SENSOR:TEMP:PV\"},\n    {\"equipment\": \"TCU:3\", \"command\": \"MODE:PV\"},\n    {\"equipment\": \"STIR:1\", \"command\": \"SPEED:PV\"},\n    {\"equipment\": \"STIR:2\", \"command\": \"SPEED:PV\"},\n    {\"equipment\": \"STIR:3\", \"command\": \"SPEED:PV\"},\n    {\"equipment\": \"PUMP:1\", \"command\": \"RATE:PV\"},\n    {\"equipment\": \"PUMP:2\", \"command\": \"RATE:PV\"},\n    {\"equipment\": \"PUMP:3\", \"command\": \"RATE:PV\"},\n    {\"equipment\": \"PUMP:FEED\", \"command\": \"RATE:PV\"},\n    {\"equipment\": \"BALANCE:FEED\", \"command\": \"MASS:PV\"},\n    {\"equipment\": \"BALANCE:ANTISOLVENT\", \"command\": \"MASS:PV\"},\n    {\"equipment\": \"BALANCE:PRODUCT\", \"command\": \"MASS:PV\"},\n    {\"equipment\": \"IR:1\", \"command\": \"CONCENTRATION:PV\"},\n    {\"equipment\": \"IR:2\", \"command\": \"CONCENTRATION:PV\"},\n    {\"equipment\": \"IR:3\", \"command\": \"CONCENTRATION:PV\"},\n    {\"equipment\": \"FBRM:1\", \"command\": \"D50:PV\"},\n    {\"equipment\": \"FBRM:1\", \"command\": \"D90:PV\"},\n    {\"equipment\": \"FBRM:2\", \"command\": \"D50:PV\"},\n    {\"equipment\": \"FBRM:2\", \"command\": \"D90:PV\"},\n    {\"equipment\": \"FBRM:3\", \"command\": \"D50:PV\"},\n    {\"equipment\": \"FBRM:3\", \"command\": \"D90:PV\"},\n    {\"equipment\": \"PT:SEPARATOR\", \"command\": \"PRESSURE:PV\"},\n    {\"equipment\": \"THERMOCOUPLE:FEED\", command: \"TEMP:PV\"},\n    {\"equipment\": \"VALVES\", \"command\": \"STATE:PV\"}\n]);\n\n\n// Write tags (i.e. SPs)\nflow.set(\"writeTags\", [\n    {\"equipment\": \"metaData\", \"command\": \"USER:SP\"},\n    {\"equipment\": \"metaData\", \"command\": \"STATUS:SP\"},\n    {\"equipment\": \"metaData\", \"command\": \"EXPERIMENT:SP\"},\n    {\"equipment\": \"metaData\", \"command\": \"MODE:SP\"},\n    {\"equipment\": \"TCU:1\", \"command\": \"TEMP:SP\"},\n    {\"equipment\": \"TCU:1\", \"command\": \"MODE:SP\"},\n    {\"equipment\": \"TCU:2\", \"command\": \"TEMP:SP\"},\n    {\"equipment\": \"TCU:2\", \"command\": \"MODE:SP\"},\n    {\"equipment\": \"TCU:3\", \"command\": \"TEMP:SP\"},\n    {\"equipment\": \"TCU:3\", \"command\": \"MODE:SP\"},\n    {\"equipment\": \"STIR:1\", \"command\": \"SPEED:SP\"},\n    {\"equipment\": \"STIR:2\", \"command\": \"SPEED:SP\"},\n    {\"equipment\": \"STIR:3\", \"command\": \"SPEED:SP\"},\n    {\"equipment\": \"PUMP:1\", \"command\": \"RATE:SP\"},\n    {\"equipment\": \"PUMP:2\", \"command\": \"RATE:SP\"},\n    {\"equipment\": \"PUMP:3\", \"command\": \"RATE:SP\"},\n    {\"equipment\": \"PUMP:FEED\", \"command\": \"RATE:SP\"},\n    {\"equipment\": \"VALVES\", \"command\": \"STATE:SP\"}\n]);\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":280,"wires":[["4788b438.e80d4c"]]},{"id":"4788b438.e80d4c","type":"function","z":"e0b529b0.845718","name":"request PVs","func":"var payload;\n\nfunction getPVs() {\n  let requests = flow.get(\"readTags\");\n\n  requests.forEach(function(req, index) {\n      setTimeout(function() {\n          node.send({\"payload\": req});\n      }, index*100);\n  });\n}\n\n// Setup a reoccuring call to get PVs\nsetInterval(getPVs, 2000);\nsetTimeout(getPVs, 1);\n\nreturn msg;","outputs":1,"noerr":0,"x":470,"y":280,"wires":[["364f4eef.49e752","ce487c2.2f4118"]],"info":"This block initializes the crystallizer by:\n * Setting the crystallizer to simulate mode\n * Sending initialization values to all the equipment\n * Setting up a repeating request to obtain all the present values"},{"id":"950c51d3.b452d","type":"link out","z":"e0b529b0.845718","name":"","links":["3f4d3783.905558"],"x":1055,"y":440,"wires":[]},{"id":"12a6bbdf.21f1a4","type":"function","z":"e0b529b0.845718","name":"simulate check","func":"var metaData = flow.get(\"metaData\");\nlet mode = metaData[\"MODE:PV\"];\n\nif (mode === \"SIMULATION\") {\n    node.log(\"Sending request to simulator\");\n    return [null, msg];\n}\nelse {\n    return [msg, null];\n}","outputs":2,"noerr":0,"x":1020,"y":340,"wires":[["5b0a594d.b141b8"],["950c51d3.b452d"]]},{"id":"5e5d26db.067a28","type":"link out","z":"e0b529b0.845718","name":"CRYSTALLIZER PV","links":["dd625972.4fede8","d613d7d8.67bd98","22ed7717.1dc528","2154b275.228b6e"],"x":895,"y":440,"wires":[]},{"id":"22acd367.86fc2c","type":"function","z":"e0b529b0.845718","name":"metaData","func":"let equipment = msg.payload.equipment;\nlet command = msg.payload.command;\n\nif (equipment == \"metaData\") {\n    let metaData = flow.get(\"metaData\");\n\n    if (command.includes(\":SP\")) {\n        node.log(\"Update metaData SPs\");\n        command = command.split(\":\")[0]+\":PV\";\n        metaData[command] = msg.payload.value;\n        flow.set(\"metaData\", metaData);\n    }\n    else if (command.includes(\":PV\")) {\n        node.log(\"Return metaDta PVs\")\n        msg.payload = {\n            \"equipment\": \"metaData\",\n            \"command\": command,\n            \"value\": metaData[command]\n        };\n        return [null, msg];\n    }\n}\nelse {\n    return [msg, null];\n}\n","outputs":2,"noerr":0,"x":840,"y":340,"wires":[["12a6bbdf.21f1a4"],["5e5d26db.067a28"]]},{"id":"35114807.8a8d98","type":"inject","z":"46d2018c.b98e9","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":230,"y":160,"wires":[["c3b1f666.3a5cd8"]]},{"id":"c3b1f666.3a5cd8","type":"function","z":"46d2018c.b98e9","name":"initialize state","func":"node.log(\"Initialize simulation state\");\n\nlet TCU = {\n    \"POWER:SP\": \"ON\",           // ON | OFF\n    \"MODE:SP\": \"SENSOR\",        // SENSOR | BATH\n    \"TEMP:SP\": 80,           // FLOAT\n    \"POWER:PV\": \"ON\",           \n    \"MODE:PV\": \"SENSOR\",        \n    \"BATH:TEMP:PV\": 22,\n    \"SENSOR:TEMP:PV\": 40,\n};\n\nlet STIR = {\n    \"STATUS:SP\": \"STOPPED\",     // STARTED | STOPPED\n    \"SPEED:SP\": 200,            // FLOAT\n    \"STATUS:PV\": \"STOPPED\",\n    \"SPEED:PV\": 0\n};\n\nlet PUMP = {\n    \"STATUS:SP\": \"STOPPED\",     // STARTED | STOPPED\n    \"RATE:SP\": 3,             // FLOAT\n    \"STATUS:PV\": \"STOPPED\",\n    \"RATE:PV\": 0\n};\n\nlet BALANCE = {\n    \"MASS:PV\": 200,\n};\n\nlet IR = {\n    \"CONCENTRATION:PV\": 0,\n};\n\nlet FBRM = {\n    \"D50:PV\": 0,\n    \"D90:PV\": 0\n};\n\nlet THERMOCOUPLE = {\n    \"TEMP:PV\": 22\n};\n\nlet PT = {\n    \"PRESSURE:PV\": 0.8\n};\n\nlet VALVES = {\n    \"STATE:PV\": {\"A\": \"CLOSED\", \"B\": \"CLOSED\", \"C\": \"CLOSED\", \"D\": \"CLOSED\", \"E\": \"CLOSED\"}\n}\n\nlet initialState = {\n    \"TCU:1\": Object.assign({}, TCU),\n    \"TCU:2\": Object.assign({}, TCU),\n    \"TCU:3\": Object.assign({}, TCU),\n    \"STIR:1\": Object.assign({}, STIR),\n    \"STIR:2\": Object.assign({}, STIR),\n    \"STIR:3\": Object.assign({}, STIR),\n    \"PUMP:1\": Object.assign({}, PUMP),\n    \"PUMP:2\": Object.assign({}, PUMP),\n    \"PUMP:3\": Object.assign({}, PUMP),\n    \"PUMP:FEED\": Object.assign({}, PUMP),\n    \"BALANCE:FEED\": Object.assign({}, BALANCE),\n    \"BALANCE:ANTISOLVENT\": Object.assign({}, BALANCE),\n    \"BALANCE:PRODUCT\": Object.assign({}, BALANCE),\n    \"IR:1\": Object.assign({}, IR),\n    \"IR:2\": Object.assign({}, IR),\n    \"IR:3\": Object.assign({}, IR),\n    \"FBRM:1\": Object.assign({}, FBRM),\n    \"FBRM:2\": Object.assign({}, FBRM),\n    \"FBRM:3\": Object.assign({}, FBRM),\n    \"THERMOCOUPLE:FEED\": Object.assign({}, THERMOCOUPLE),\n    \"PT:SEPARATOR\": Object.assign({}, PT),\n    \"VALVES\": Object.assign({}, VALVES),\n}\n\nflow.set(\"state\", initialState);\n\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":160,"wires":[["8fb1493.ee94eb8"]]},{"id":"9f1c2caa.e7fcf","type":"inject","z":"e0b529b0.845718","name":"halt","topic":"","payload":"{\"equipment\":\"CRYSTALLIZER\",\"command\":\"HALT\"}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":".1","x":390,"y":340,"wires":[["364f4eef.49e752"]]},{"id":"ce487c2.2f4118","type":"debug","z":"e0b529b0.845718","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":710,"y":280,"wires":[]},{"id":"92160451.060888","type":"influxdb out","z":"55e3c78a.a11168","influxdb":"2e033692.9a2b6a","name":"crystallization","measurement":"crystallization","precision":"","retentionPolicy":"","x":1080,"y":300,"wires":[]},{"id":"8fb1493.ee94eb8","type":"function","z":"46d2018c.b98e9","name":"simulate","func":"node.log(\"Simulate\");\n\ncontext.set(\"startTime\", Date.now());\nlet INTERVAL = 5; //seconds\n    \nfunction PV_lag_SP(PV, SP, tau) {\n    PV = PV * (1 + 0.1 * (Math.random() - 0.5)) + tau * (SP - PV);\n    return PV;\n}\n\nfunction decay(currentTime, startTime, tau) {\n    return Math.exp((startTime - currentTime)/tau);\n}\n\nfunction randomValve() {\n    return Math.random() > 0.5 ? \"OPENED\" : \"CLOSEED\";\n}\n\nfunction simulate() {\n    let state = flow.get(\"state\");\n    let currentTime = Date.now();\n    let startTime = context.get(\"startTime\");\n    \n    state[\"TCU:1\"][\"BATH:TEMP:PV\"] = PV_lag_SP(state[\"TCU:1\"][\"BATH:TEMP:PV\"], state[\"TCU:1\"][\"TEMP:SP\"], 0.05);\n    state[\"TCU:2\"][\"BATH:TEMP:PV\"] = PV_lag_SP(state[\"TCU:2\"][\"BATH:TEMP:PV\"], state[\"TCU:2\"][\"TEMP:SP\"], 0.05);\n    state[\"TCU:3\"][\"BATH:TEMP:PV\"] = PV_lag_SP(state[\"TCU:3\"][\"BATH:TEMP:PV\"], state[\"TCU:3\"][\"TEMP:SP\"], 0.05);\n    state[\"TCU:1\"][\"SENSOR:TEMP:PV\"] = PV_lag_SP(state[\"TCU:1\"][\"SENSOR:TEMP:PV\"], state[\"TCU:1\"][\"TEMP:SP\"], 0.01);\n    state[\"TCU:2\"][\"SENSOR:TEMP:PV\"] = PV_lag_SP(state[\"TCU:2\"][\"SENSOR:TEMP:PV\"], state[\"TCU:2\"][\"TEMP:SP\"], 0.01);\n    state[\"TCU:3\"][\"SENSOR:TEMP:PV\"] = PV_lag_SP(state[\"TCU:3\"][\"SENSOR:TEMP:PV\"], state[\"TCU:3\"][\"TEMP:SP\"], 0.01);\n\n    state[\"STIR:1\"][\"SPEED:PV\"] = PV_lag_SP(state[\"STIR:1\"][\"SPEED:PV\"], state[\"STIR:1\"][\"SPEED:SP\"], 0.8);\n    state[\"STIR:2\"][\"SPEED:PV\"] = PV_lag_SP(state[\"STIR:2\"][\"SPEED:PV\"], state[\"STIR:2\"][\"SPEED:SP\"], 0.8);\n    state[\"STIR:3\"][\"SPEED:PV\"] = PV_lag_SP(state[\"STIR:3\"][\"SPEED:PV\"], state[\"STIR:3\"][\"SPEED:SP\"], 0.8);\n    \n    state[\"PUMP:1\"][\"RATE:PV\"] = PV_lag_SP(state[\"PUMP:1\"][\"RATE:PV\"], state[\"PUMP:1\"][\"RATE:SP\"], 0.9);\n    state[\"PUMP:2\"][\"RATE:PV\"] = PV_lag_SP(state[\"PUMP:2\"][\"RATE:PV\"], state[\"PUMP:2\"][\"RATE:SP\"], 0.9);\n    state[\"PUMP:3\"][\"RATE:PV\"] = PV_lag_SP(state[\"PUMP:3\"][\"RATE:PV\"], state[\"PUMP:3\"][\"RATE:SP\"], 0.9);\n    state[\"PUMP:FEED\"][\"RATE:PV\"] = PV_lag_SP(state[\"PUMP:FEED\"][\"RATE:PV\"], state[\"PUMP:FEED\"][\"RATE:SP\"], 0.9);\n    \n    if (state[\"BALANCE:FEED\"][\"MASS:PV\"] > 0) {\n        state[\"BALANCE:FEED\"][\"MASS:PV\"] = state[\"BALANCE:FEED\"][\"MASS:PV\"] - state[\"PUMP:FEED\"][\"RATE:PV\"] /60.0*INTERVAL + 3*(Math.random()-0.5);\n    }\n    else {\n        state[\"BALANCE:FEED\"][\"MASS:PV\"] = 5000;\n    }\n    if (state[\"BALANCE:ANTISOLVENT\"][\"MASS:PV\"] > 0) {\n        state[\"BALANCE:ANTISOLVENT\"][\"MASS:PV\"] = state[\"BALANCE:ANTISOLVENT\"][\"MASS:PV\"] - state[\"PUMP:FEED\"][\"RATE:PV\"] /60.0*INTERVAL + 3*(Math.random()-0.5);\n    }\n    else {\n        state[\"BALANCE:ANTISOLVENT\"][\"MASS:PV\"] = 5000;\n    }\n    if (state[\"BALANCE:PRODUCT\"][\"MASS:PV\"] < 5000) {\n        state[\"BALANCE:PRODUCT\"][\"MASS:PV\"] = state[\"BALANCE:PRODUCT\"][\"MASS:PV\"] - state[\"PUMP:FEED\"][\"RATE:PV\"] /60.0*INTERVAL + 3*(Math.random()-0.5);\n    }\n    else {\n        state[\"BALANCE:PRODUCT\"][\"MASS:PV\"] = 0;\n    }\n  \n    state[\"IR:1\"][\"CONCENTRATION:PV\"] = 50 - 12 * (1 - decay(currentTime, startTime, 100000)) + 3*(Math.random()-0.5);\n    state[\"IR:2\"][\"CONCENTRATION:PV\"] = 50 - 23 * (1 - decay(currentTime, startTime, 600000)) + 3*(Math.random()-0.5);\n    state[\"IR:3\"][\"CONCENTRATION:PV\"] = 50 - 39 * (1 - decay(currentTime, startTime, 900000)) + 3*(Math.random()-0.5);\n    \n    state[\"FBRM:1\"][\"D50:PV\"] = 21 + 12 * (1 - decay(currentTime, startTime, 100000)) + 3*(Math.random()-0.5);\n    state[\"FBRM:2\"][\"D50:PV\"] = 32 + 14 * (1 - decay(currentTime, startTime, 600000)) + 3*(Math.random()-0.5);\n    state[\"FBRM:3\"][\"D50:PV\"] = 37 + 11 * (1 - decay(currentTime, startTime, 900000)) + 3*(Math.random()-0.5);\n    \n    state[\"FBRM:1\"][\"D90:PV\"] = 35 + 12 * (1 - decay(currentTime, startTime, 100000)) + 3*(Math.random()-0.5);\n    state[\"FBRM:2\"][\"D90:PV\"] = 51 + 14 * (1 - decay(currentTime, startTime, 600000)) + 3*(Math.random()-0.5);\n    state[\"FBRM:3\"][\"D90:PV\"] = 73 + 11 * (1 - decay(currentTime, startTime, 900000)) + 3*(Math.random()-0.5);\n    \n    state[\"THERMOCOUPLE:FEED\"][\"TEMP:PV\"] = 60 * (1 + 0.02 * (Math.random() - 0.5));\n    \n    state[\"PT:SEPARATOR\"][\"PRESSURE:PV\"] = 0.8 * (1 + 0.05 * (Math.random() - 0.5));\n    \n    state[\"VALVES\"][\"STATE:PV\"] = {\"A\": randomValve(), \"B\": randomValve(), \"C\": randomValve(), \"D\": randomValve(), \"E\": randomValve()};\n    \n    flow.set(\"state\", state);    \n    node.send({\n        \"payload\": state\n    })\n}\n\nsetInterval(simulate, INTERVAL*1000)","outputs":1,"noerr":0,"x":600,"y":160,"wires":[[]]},{"id":"3b934d6e.3fbfb2","type":"function","z":"46d2018c.b98e9","name":"retreive values","func":"node.log(\"retreive values\");\n\nlet state = flow.get(\"state\")\n\nlet equipment = msg.payload.equipment;\nlet command = msg.payload.command;\nlet value = msg.payload.value;\n\nif (command.includes(\":SP\")) {\n    state[equipment][command] = value;\n    context.set(\"state\", state);\n}\nelse if (command.includes(\":PV\")) {\n    msg.payload = {\n        \"equipment\": equipment,\n        \"command\": command,\n        \"value\": state[equipment][command]\n    };\n    return msg;\n}","outputs":1,"noerr":0,"x":560,"y":300,"wires":[["a8b48e27.deb95"]]},{"id":"2154b275.228b6e","type":"link in","z":"55e3c78a.a11168","name":"PV response","links":["5e5d26db.067a28","a8b48e27.deb95"],"x":695,"y":360,"wires":[["2f07ad62.90de42","72415475.71354c","6a8b678d.0b96b8"]]},{"id":"2f07ad62.90de42","type":"function","z":"55e3c78a.a11168","name":"format database","func":"let equipment = msg.payload[\"equipment\"];\nlet command = msg.payload[\"command\"];\nlet value = msg.payload[\"value\"];\n\nlet field = null;\nlet tag = null;\n\nif (equipment === \"VALVES\") {\n    field = {}\n    field[command] = JSON.stringify(value);\n    \n    tags = {\n        \"EQUIPMENT\": equipment,\n    }\n    msg.payload = [field, tags];\n}\nelse {\n    field = {}\n    field[command] = value;\n    \n    tags = {\n        \"EQUIPMENT\": equipment,\n    }\n    msg.payload = [field, tags];\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":880,"y":300,"wires":[["92160451.060888"]]},{"id":"6a8b678d.0b96b8","type":"debug","z":"55e3c78a.a11168","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":870,"y":420,"wires":[]},{"id":"a97c1b80.c6de08","type":"function","z":"55e3c78a.a11168","name":"parse json","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":360,"wires":[["1b968e6e.5fc202"]]}]